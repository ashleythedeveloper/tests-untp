"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7606],{8481:(e,n,i)=>{i.d(n,{Ay:()=>o,RM:()=>a});var r=i(4848),t=i(8453);const a=[];function s(e){const n={admonition:"admonition",p:"p",...(0,t.R)(),...e.components};return(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"Please note that this content is under development and is not ready for implementation. This status message will be updated as content development progresses."})})}function o(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(s,{...e})}):s(e)}},2192:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var r=i(4848),t=i(8453),a=i(8481);const s={sidebar_position:118,title:"Verify App"},o=void 0,c={id:"mock-apps/verify-app",title:"Verify App",description:"Description",source:"@site/docs/mock-apps/verify-app.md",sourceDirName:"mock-apps",slug:"/mock-apps/verify-app",permalink:"/docs/mock-apps/verify-app",draft:!1,unlisted:!1,editUrl:"https://github.com/uncefact/tests-untp/tree/main/docs/mock-apps/verify-app.md",tags:[],version:"current",sidebarPosition:118,frontMatter:{sidebar_position:118,title:"Verify App"},sidebar:"tutorialSidebar",previous:{title:"Scanning App",permalink:"/docs/mock-apps/scanning-app"}},p={},d=[...a.RM,{value:"Description",id:"description",level:2},{value:"Overall Flow Diagram",id:"overall-flow-diagram",level:2},{value:"Components",id:"components",level:2},{value:"1. Decryption Process",id:"1-decryption-process",level:3},{value:"2. Verification Process",id:"2-verification-process",level:3},{value:"3. Credential Display",id:"3-credential-display",level:3},{value:"Error Handling",id:"error-handling",level:2},{value:"Usage",id:"usage",level:2}];function l(e){const n={h2:"h2",h3:"h3",li:"li",mermaid:"mermaid",ol:"ol",p:"p",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.Ay,{}),"\n",(0,r.jsx)(n.h2,{id:"description",children:"Description"}),"\n",(0,r.jsx)(n.p,{children:"The Verify page is a crucial component of the Scanning App, responsible for verifying UNTP credentials and displaying the verified credentials. It handles the decryption of encrypted Verifiable Credentials (VCs), verification through a dedicated service, and presentation of the results to the user."}),"\n",(0,r.jsx)(n.h2,{id:"overall-flow-diagram",children:"Overall Flow Diagram"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant U as User\n    participant V as Verify Page\n    participant D as Decryption Service\n    participant VS as Verification Service\n    participant CR as Credential Renderer\n    U->>V: Access Verify Page\n    V->>D: Decrypt Encrypted VC\n    D--\x3e>V: Return Decrypted VC\n    V->>VS: Send VC for Verification\n    VS--\x3e>V: Return Verification Result\n    V->>CR: Render Verified Credential\n    CR--\x3e>V: Return Rendered Credential\n    V->>U: Display Verification Result and Credential"}),"\n",(0,r.jsx)(n.h2,{id:"components",children:"Components"}),"\n",(0,r.jsx)(n.h3,{id:"1-decryption-process",children:"1. Decryption Process"}),"\n",(0,r.jsx)(n.p,{children:"The decryption process handles the secure decryption of the encrypted Verifiable Credential."}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant V as Verify Page\n    participant D as Decryption Service\n    participant K as Key Management\n    V->>D: Send Encrypted VC\n    D->>K: Request Decryption Key\n    K--\x3e>D: Provide Decryption Key\n    D->>D: Decrypt VC\n    D--\x3e>V: Return Decrypted VC"}),"\n",(0,r.jsx)(n.h3,{id:"2-verification-process",children:"2. Verification Process"}),"\n",(0,r.jsx)(n.p,{children:"The verification process ensures the authenticity and integrity of the Verifiable Credential."}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant V as Verify Page\n    participant VS as Verification Service\n    participant IS as Issuer Service\n    V->>VS: Send VC for Verification\n    VS->>IS: Check Issuer Validity\n    IS--\x3e>VS: Confirm Issuer Status\n    VS->>VS: Verify VC Signature\n    VS->>VS: Check Credential Status\n    VS--\x3e>V: Return Verification Result"}),"\n",(0,r.jsx)(n.h3,{id:"3-credential-display",children:"3. Credential Display"}),"\n",(0,r.jsx)(n.p,{children:"The credential display component renders the verified credential information to the user."}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant V as Verify Page\n    participant CR as Credential Renderer\n    participant U as User\n    V->>CR: Send Verified Credential Data\n    CR->>CR: Process Credential Structure\n    CR->>CR: Apply Styling and Formatting\n    CR--\x3e>V: Return Rendered Credential\n    V->>U: Display Formatted Credential"}),"\n",(0,r.jsx)(n.h2,{id:"error-handling",children:"Error Handling"}),"\n",(0,r.jsx)(n.p,{children:"The Verify page includes robust error handling to manage various scenarios:"}),"\n",(0,r.jsx)(n.mermaid,{value:"sequenceDiagram\n    participant U as User\n    participant V as Verify Page\n    participant ES as Error Service\n    V->>V: Attempt Verification Process\n    alt Decryption Error\n        V->>ES: Report Decryption Failure\n        ES--\x3e>V: Return Error Message\n    else Verification Error\n        V->>ES: Report Verification Failure\n        ES--\x3e>V: Return Error Details\n    else Rendering Error\n        V->>ES: Report Display Failure\n        ES--\x3e>V: Return Fallback UI\n    end\n    V->>U: Show Appropriate Error Message"}),"\n",(0,r.jsx)(n.h2,{id:"usage",children:"Usage"}),"\n",(0,r.jsx)(n.p,{children:"To use the Verify page:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Access the page with a Verifiable Credential (usually redirected from the Scanning page)."}),"\n",(0,r.jsx)(n.li,{children:"The page automatically initiates the decryption and verification processes."}),"\n",(0,r.jsx)(n.li,{children:"If successful, the verified credential is displayed in a user-friendly format."}),"\n",(0,r.jsx)(n.li,{children:"In case of errors, appropriate error messages are shown to guide the user."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var r=i(6540);const t={},a=r.createContext(t);function s(e){const n=r.useContext(a);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);